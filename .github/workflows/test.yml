name: Test & Quality Assurance

on:
  push:
    branches: [ main, develop, cursor/* ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Shellcheck & Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install shellcheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      
      - name: Run shellcheck on scripts
        run: |
          find scripts/ -name "*.sh" -type f | xargs shellcheck -S warning || true
      
      - name: Check Nix syntax
        run: |
          nix-instantiate --parse configuration/*.nix >/dev/null

  test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      
      - name: Install NixOS test environment
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-24.05
      
      - name: Run test suite
        run: |
          chmod +x tests/run_all_tests.sh
          sudo bash tests/run_all_tests.sh || true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: tests/*.log

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security audit
        run: |
          # Check for hardcoded secrets
          ! grep -rE "(password|secret|api[_-]?key)" \
            --include="*.sh" \
            --include="*.nix" \
            scripts/ configuration/ || true
      
      - name: Check file permissions
        run: |
          # Ensure scripts are executable
          find scripts/ -name "*.sh" -type f ! -executable && exit 1 || true

  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      
      - name: Create release tarball
        run: |
          tar --exclude='.git' \
              --exclude='dev-reference' \
              --exclude='*.backup' \
              -czf hyper-nixos-${{ github.ref_name }}.tar.gz \
              .
      
      - name: Generate checksums
        run: |
          sha256sum hyper-nixos-${{ github.ref_name }}.tar.gz \
            > hyper-nixos-${{ github.ref_name }}.tar.gz.sha256
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-package
          path: |
            hyper-nixos-*.tar.gz
            hyper-nixos-*.sha256
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            hyper-nixos-*.tar.gz
            hyper-nixos-*.sha256
          draft: false
          prerelease: false
