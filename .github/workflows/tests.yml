name: Tests

on:
  push:
    branches: [ main, develop, 'cursor/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bats jq
      
      - name: Run unit tests
        run: |
          if [ -d "tests/unit" ] && [ "$(ls -A tests/unit/*.bats 2>/dev/null)" ]; then
            bats tests/unit/*.bats
          else
            echo "No unit tests found yet - skipping"
            exit 0
          fi
      
      - name: Test Summary
        if: always()
        run: |
          echo "### Unit Test Results âœ…" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install KVM and libvirt
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-kvm \
            libvirt-daemon-system \
            libvirt-clients \
            jq \
            bridge-utils
      
      - name: Start libvirtd
        run: |
          sudo systemctl start libvirtd
          sudo systemctl status libvirtd
      
      - name: Run integration tests
        run: |
          if [ -d "tests/integration" ] && [ "$(ls -A tests/integration/*.sh 2>/dev/null)" ]; then
            for test in tests/integration/*.sh; do
              echo "Running: $test"
              bash "$test"
            done
          else
            echo "No integration tests found yet - skipping"
            exit 0
          fi
      
      - name: Test Summary
        if: always()
        run: |
          echo "### Integration Test Results ðŸ”„" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
